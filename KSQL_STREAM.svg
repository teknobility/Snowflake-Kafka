<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1044px" preserveAspectRatio="none" style="width:1682px;height:1044px;" version="1.1" viewBox="0 0 1682 1044" width="1682px" zoomAndPan="magnify">
    <defs>
        <filter height="300%" id="f1xfb2ug7z9k6a" width="300%" x="-1" y="-1">
            <feGaussianBlur result="blurOut" stdDeviation="2.0" />
            <feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0" />
            <feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3" />
            <feBlend in="SourceGraphic" in2="blurOut3" mode="normal" />
        </filter>
    </defs>
    <g><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="512" x="586.25" y="24.5332">Establishing Single Source of Truth for Customer Information using KSQL</text>
        <rect fill="#DDDDDD" height="589.1406" style="stroke: #A80036; stroke-width: 1.0;" width="874.5" x="547" y="35.6094" /><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="36" x="966.25" y="49.1045">Kafka</text>
        <rect fill="#87CEEB" filter="url(#f1xfb2ug7z9k6a)" height="189.4609" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="399.5" y="115.5703" />
        <rect fill="#FFFFFF" filter="url(#f1xfb2ug7z9k6a)" height="433.5703" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1589.5" y="115.5703" />
        <rect fill="#87CEEB" filter="url(#f1xfb2ug7z9k6a)" height="30" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1594.5" y="496.1406" />
        <rect fill="#FFFFFF" filter="url(#f1xfb2ug7z9k6a)" height="293.5156" style="stroke: #000000; stroke-width: 2.0;" width="1404.5" x="33" y="173.2734" />
        <rect fill="#FFFFFF" filter="url(#f1xfb2ug7z9k6a)" height="139.7578" style="stroke: #000000; stroke-width: 2.0;" width="886.5" x="541" y="320.0313" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="109" x2="109" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="246" x2="246" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="404" x2="404" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="584" x2="584" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="660" x2="660" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="849.5" x2="849.5" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1010.5" x2="1010.5" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1315.5" x2="1315.5" y1="105.5703" y2="558.1406" />
        <line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1594.5" x2="1594.5" y1="105.5703" y2="558.1406" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="126" x="43" y="102.4941">Customer Database</text>
        <path d="M91,51.9609 C91,41.9609 109,41.9609 109,41.9609 C109,41.9609 127,41.9609 127,51.9609 L127,77.9609 C127,87.9609 109,87.9609 109,87.9609 C109,87.9609 91,87.9609 91,77.9609 L91,51.9609 " fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" style="stroke: #000000; stroke-width: 1.5;" />
        <path d="M91,51.9609 C91,61.9609 109,61.9609 109,61.9609 C109,61.9609 127,61.9609 127,51.9609 " fill="none" style="stroke: #000000; stroke-width: 1.5;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="126" x="43" y="571.6738">Customer Database</text>
        <path d="M91,584.75 C91,574.75 109,574.75 109,574.75 C109,574.75 127,574.75 127,584.75 L127,610.75 C127,620.75 109,620.75 109,620.75 C109,620.75 91,620.75 91,610.75 L91,584.75 " fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" style="stroke: #000000; stroke-width: 1.5;" />
        <path d="M91,584.75 C91,594.75 109,594.75 109,594.75 C109,594.75 127,594.75 127,584.75 " fill="none" style="stroke: #000000; stroke-width: 1.5;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="116" x="185" y="102.4941">Account Database</text>
        <path d="M228,51.9609 C228,41.9609 246,41.9609 246,41.9609 C246,41.9609 264,41.9609 264,51.9609 L264,77.9609 C264,87.9609 246,87.9609 246,87.9609 C246,87.9609 228,87.9609 228,77.9609 L228,51.9609 " fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" style="stroke: #000000; stroke-width: 1.5;" />
        <path d="M228,51.9609 C228,61.9609 246,61.9609 246,61.9609 C246,61.9609 264,61.9609 264,51.9609 " fill="none" style="stroke: #000000; stroke-width: 1.5;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="116" x="185" y="571.6738">Account Database</text>
        <path d="M228,584.75 C228,574.75 246,574.75 246,574.75 C246,574.75 264,574.75 264,584.75 L264,610.75 C264,620.75 246,620.75 246,620.75 C246,620.75 228,620.75 228,610.75 L228,584.75 " fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" style="stroke: #000000; stroke-width: 1.5;" />
        <path d="M228,584.75 C228,594.75 246,594.75 246,594.75 C246,594.75 264,594.75 264,584.75 " fill="none" style="stroke: #000000; stroke-width: 1.5;" />
        <rect fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" height="31.6094" style="stroke: #A80036; stroke-width: 1.5;" width="171" x="317" y="68.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="157" x="324" y="90.4941">CDC Reader (Debezium)</text>
        <rect fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" height="31.6094" style="stroke: #A80036; stroke-width: 1.5;" width="171" x="317" y="557.1406" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="157" x="324" y="578.6738">CDC Reader (Debezium)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="61" x="551" y="102.4941">Customer</text>
        <ellipse cx="584.5" cy="71.9609" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="572.5" x2="596.5" y1="85.9609" y2="85.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="61" x="551" y="571.6738">Customer</text>
        <ellipse cx="584.5" cy="590.75" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="572.5" x2="596.5" y1="604.75" y2="604.75" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="58" x="628" y="102.4941">Accounts</text>
        <ellipse cx="660" cy="71.9609" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="648" x2="672" y1="85.9609" y2="85.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="58" x="628" y="571.6738">Accounts</text>
        <ellipse cx="660" cy="590.75" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="648" x2="672" y1="604.75" y2="604.75" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="150" x="771.5" y="102.4941">Customer Table/Stream</text>
        <ellipse cx="849.5" cy="71.9609" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="837.5" x2="861.5" y1="85.9609" y2="85.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="150" x="771.5" y="571.6738">Customer Table/Stream</text>
        <ellipse cx="849.5" cy="590.75" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="837.5" x2="861.5" y1="604.75" y2="604.75" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="140" x="937.5" y="102.4941">Account Table/Stream</text>
        <ellipse cx="1010.5" cy="71.9609" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="998.5" x2="1022.5" y1="85.9609" y2="85.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="140" x="937.5" y="571.6738">Account Table/Stream</text>
        <ellipse cx="1010.5" cy="590.75" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="998.5" x2="1022.5" y1="604.75" y2="604.75" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="198" x="1213.5" y="102.4941">Customer Account Relationship</text>
        <ellipse cx="1315.5" cy="71.9609" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="1303.5" x2="1327.5" y1="85.9609" y2="85.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="198" x="1213.5" y="571.6738">Customer Account Relationship</text>
        <ellipse cx="1315.5" cy="590.75" fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" rx="12" ry="12" style="stroke: #A80036; stroke-width: 2.0;" />
        <line style="stroke: #A80036; stroke-width: 2.0;" x1="1303.5" x2="1327.5" y1="604.75" y2="604.75" />
        <rect fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" height="31.6094" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="1537.5" y="68.9609" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="96" x="1544.5" y="90.4941">Online Banking</text>
        <rect fill="#FEFECE" filter="url(#f1xfb2ug7z9k6a)" height="31.6094" style="stroke: #A80036; stroke-width: 1.5;" width="110" x="1537.5" y="557.1406" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="96" x="1544.5" y="578.6738">Online Banking</text>
        <rect fill="#87CEEB" filter="url(#f1xfb2ug7z9k6a)" height="189.4609" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="399.5" y="115.5703" />
        <rect fill="#FFFFFF" filter="url(#f1xfb2ug7z9k6a)" height="433.5703" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1589.5" y="115.5703" />
        <rect fill="#87CEEB" filter="url(#f1xfb2ug7z9k6a)" height="30" style="stroke: #A80036; stroke-width: 1.0;" width="10" x="1594.5" y="496.1406" />
        <path d="M13,122.5703 L637,122.5703 L637,130.5703 L627,140.5703 L13,140.5703 L13,122.5703 " fill="#98FB98" style="stroke: #000000; stroke-width: 1.0;" />
        <rect fill="none" height="418.5703" style="stroke: #000000; stroke-width: 2.0;" width="1658.5" x="13" y="122.5703" /><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="579" x="28" y="137.0654">Feature 1 - Customer information flow from databases to a Kafka stream with enriched data</text>
        <path d="M23,147.9219 L974,147.9219 L974,155.9219 L964,165.9219 L23,165.9219 L23,147.9219 " fill="#FFFFE0" style="stroke: #000000; stroke-width: 1.0;" />
        <rect fill="none" height="386.2188" style="stroke: #000000; stroke-width: 2.0;" width="1638.5" x="23" y="147.9219" /><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="906" x="38" y="162.417">Scenario 1.1 - Customer and account information stored in different DBs are joined together in a topic producing customer account relationship</text>
        <path d="M33,173.2734 L106,173.2734 L106,181.2734 L96,191.2734 L33,191.2734 L33,173.2734 " fill="#EEEEEE" style="stroke: #000000; stroke-width: 1.0;" />
        <rect fill="none" height="293.5156" style="stroke: #000000; stroke-width: 2.0;" width="1404.5" x="33" y="173.2734" /><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="28" x="48" y="187.7686">loop</text>
        <polygon fill="#A80036" points="387.5,209.9766,397.5,213.9766,387.5,217.9766,391.5,213.9766" style="stroke: #A80036; stroke-width: 1.0;" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="109" x2="393.5" y1="213.9766" y2="213.9766" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="116" y="209.1201">Data Read from CDC</text>
        <polygon fill="#A80036" points="387.5,240.3281,397.5,244.3281,387.5,248.3281,391.5,244.3281" style="stroke: #A80036; stroke-width: 1.0;" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="246" x2="393.5" y1="244.3281" y2="244.3281" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="121" x="253" y="239.4717">Data Read from CDC</text>
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="582.5" x2="572.5" y1="274.6797" y2="270.6797" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="582.5" x2="572.5" y1="274.6797" y2="278.6797" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="409.5" x2="583.5" y1="274.6797" y2="274.6797" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="151" x="416.5" y="269.8232">Kafka Connect (customer)</text>
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="658" x2="648" y1="305.0313" y2="301.0313" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="658" x2="648" y1="305.0313" y2="309.0313" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="404.5" x2="659" y1="305.0313" y2="305.0313" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="143" x="411.5" y="300.1748">Kafka Connect (account)</text>
        <path d="M541,320.0313 L614,320.0313 L614,328.0313 L604,338.0313 L541,338.0313 L541,320.0313 " fill="#EEEEEE" style="stroke: #000000; stroke-width: 1.0;" />
        <rect fill="none" height="139.7578" style="stroke: #000000; stroke-width: 2.0;" width="886.5" x="541" y="320.0313" /><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="28" x="556" y="334.5264">loop</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="37" x="629" y="333.4502">[KSQL]</text>
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="847.5" x2="837.5" y1="360.7344" y2="356.7344" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="847.5" x2="837.5" y1="360.7344" y2="364.7344" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="584.5" x2="848.5" y1="360.7344" y2="360.7344" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="241" x="591.5" y="355.8779">Parse json object from CDC to flat stream</text>
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="1008.5" x2="998.5" y1="391.0859" y2="387.0859" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="1008.5" x2="998.5" y1="391.0859" y2="395.0859" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="660" x2="1009.5" y1="391.0859" y2="391.0859" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="241" x="667" y="386.2295">Parse json object from CDC to flat stream</text>
        <polygon fill="#A80036" points="1303.5,417.4375,1313.5,421.4375,1303.5,425.4375,1307.5,421.4375" style="stroke: #A80036; stroke-width: 1.0;" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="849.5" x2="1309.5" y1="421.4375" y2="421.4375" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="273" x="856.5" y="416.5811">join with "Account Stream" to get a relationship</text>
        <polygon fill="#A80036" points="1303.5,447.7891,1313.5,451.7891,1303.5,455.7891,1307.5,451.7891" style="stroke: #A80036; stroke-width: 1.0;" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="1010.5" x2="1309.5" y1="451.7891" y2="451.7891" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="281" x="1017.5" y="446.9326">join with "Customer Stream" to get a relationship</text>
        <polygon fill="#A80036" points="1582.5,492.1406,1592.5,496.1406,1582.5,500.1406,1586.5,496.1406" style="stroke: #A80036; stroke-width: 1.0;" />
        <line style="stroke: #A80036; stroke-width: 1.0;" x1="1315.5" x2="1588.5" y1="496.1406" y2="496.1406" /><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="250" x="1322.5" y="491.2842">APIs to pull customer account Relationship</text>
        <rect fill="#DDDDDD" height="399.9219" rx="5" ry="5" style="stroke: #000000; stroke-width: 1.0;" width="697" x="11" y="633.75" /><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="77" x="17" y="657.4355">Features</text><text fill="#000000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="685" x="17" y="678">Feature 1: Customer information flow from databases to a Kafka stream with enriched data</text><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="579" x="17" y="697.0869">Scenario 1.1: Customer and account information stored in different DBs are joined</text><text fill="#000000" font-family="sans-serif" font-size="15" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="423" x="17" y="715.9541">together in a topic producing customer account relationship</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="21" y="733.7832" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="63" x="17" y="751.3926">As a bank</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="373" x="17" y="769.002">I want to have a single source of truth for my customer data</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="351" x="17" y="786.6113">So that I can maintain and report better on my customer</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="278" x="17" y="804.2207">And I have the latest information about them</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="21" y="821.8301" /><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="80" x="17" y="843.5918">Narrative</text><text fill="#000000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="101" x="17" y="864.1563">Assumptions</text>
        <ellipse cx="22.5" cy="877.7813" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="668" x="30" y="882.2051">Customer and account data is present in separate database/tables and is maintained on an ongoing basis</text>
        <ellipse cx="22.5" cy="895.3906" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="330" x="30" y="899.8145">The Customer and account Database supports CDC</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="21" y="917.4238" /><text fill="#000000" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="88" x="17" y="937.1094">Description</text>
        <ellipse cx="22.5" cy="950.7344" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="663" x="30" y="955.1582">The customer database holds customer information and the account database holds account information.</text>
        <ellipse cx="22.5" cy="968.3438" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="523" x="30" y="972.7676">When there is a change in these databases, CDC is used to write to topics in Kafka</text>
        <ellipse cx="22.5" cy="985.9531" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="562" x="30" y="990.377">These topics are refined to ultimately produce a "Customer Account Relationship" Stream</text>
        <ellipse cx="22.5" cy="1003.5625" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;" /><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="519" x="30" y="1007.9863">This stream cab be subscribed to by banking systems (online banking in this case)</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="0" x="21" y="1025.5957" />
        <!--MD5=[a392c5504c36caca1770c9da23d5ec7c]
@startuml
title Establishing Single Source of Truth for Customer Information using KSQL

database "Customer Database" as customerDB
database "Account Database" as accountsDB
participant "CDC Reader (Debezium)" as debeziumReader
box "Kafka"
  entity "Customer" as customerTopic
  entity "Accounts" as accountsTopic
  entity "Customer Table/Stream" as customerFlattened
  entity "Account Table/Stream" as accountsFlattened
  entity "Customer Account Relationship" as custAcctRelTopic
end box
participant "Online Banking" as consumer1
group#PaleGreen #transparent Feature 1 - Customer information flow from databases to a Kafka stream with enriched data
  group#LightYellow #transparent Scenario 1.1 - Customer and account information stored in different DBs are joined together in a topic producing customer account relationship
    loop
      activate debeziumReader #SkyBlue
      customerDB -> debeziumReader: Data Read from CDC
      accountsDB -> debeziumReader: Data Read from CDC
      debeziumReader ->> customerTopic: Kafka Connect (customer)
      debeziumReader ->> accountsTopic: Kafka Connect (account)
      deactivate debeziumReader
      loop KSQL
        customerTopic ->> customerFlattened: Parse json object from CDC to flat stream
        accountsTopic ->> accountsFlattened: Parse json object from CDC to flat stream
        customerFlattened -> custAcctRelTopic: join with "Account Stream" to get a relationship
        accountsFlattened -> custAcctRelTopic: join with "Customer Stream" to get a relationship
      end loop
    end loop
    activate consumer1
    custAcctRelTopic -> consumer1++ #SkyBlue: APIs to pull customer account Relationship
    deactivate consumer1
  end
end
legend left
  =Features
  ==Feature 1: Customer information flow from databases to a Kafka stream with enriched data
  ===Scenario 1.1: Customer and account information stored in different DBs are joined
  ===together in a topic producing customer account relationship

  As a bank
  I want to have a single source of truth for my customer data
  So that I can maintain and report better on my customer
  And I have the latest information about them

  =Narrative
  ==Assumptions
  *Customer and account data is present in separate database/tables and is maintained on an ongoing basis
  *The Customer and account Database supports CDC

  ==Description
  *The customer database holds customer information and the account database holds account information.
  *When there is a change in these databases, CDC is used to write to topics in Kafka
  *These topics are refined to ultimately produce a "Customer Account Relationship" Stream
  *This stream cab be subscribed to by banking systems (online banking in this case)

end legend
@enduml

PlantUML version 1.2020.00(Sat Jan 11 07:30:53 EST 2020)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_241-b07
Operating System: Windows 10
Default Encoding: Cp1252
Language: en
Country: US
-->
    </g>
</svg>